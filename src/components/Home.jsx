import { Stack } from '@mui/material'
import TextField from '@mui/material/TextField';
import {Button} from '@mui/material'
import { useEffect, useState } from 'react'
import BorderBar from './progress';
import DeepTokenSaleJSON from '../../build/contracts/DeepTokenSale.json'
import DeepToken from '../../build/contracts/DeepToken.json'
import Web3 from 'web3';


const Home=()=>{
    const [tokenPrice , setTokenPrice] = useState(0)
    const [tokenNum , setTokenNum] = useState(1)
    const [totalToken , setTotalToken] = useState(100)
    const [tokenBought , setTokenBough] = useState(50)
    const [DeepTokenSaleContract , setDeepTokenSaleContract] = useState({})
    const [DeepTokenContract , setDeepTokenContract] = useState({})
    const web3 = new Web3("HTTP://127.0.0.1:7545");
    var Contract = web3.eth.Contract;
    Contract.setProvider('http://localhost:7545' );

    const [sender , setSender] = useState("0x0")
    const admin = "0x395603aAFbC998381bC5993Ba3d2a04514a38397"

    const getAddress=()=>{
        if(window.ethereum){
            ethereum.enable().then(function(acc){
                setSender(acc[0]);
                
            });
        } 
    }
    
    const initDeepSaleContract=(deepTokenInstanceObject)=>{
        
        const tokenSaleContract = new Contract(DeepTokenSaleJSON.abi ,"0xF0c209A6f75d4a2F098957d2f6C7c46Dd35B46c6" )
        tokenSaleContract.deploy({
            data:"0x608060405234801561001057600080fd5b50604051610a52380380610a528339818101604052810190610032919061016c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555050506101ac565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f1826100c6565b9050919050565b6000610103826100e6565b9050919050565b610113816100f8565b811461011e57600080fd5b50565b6000815190506101308161010a565b92915050565b6000819050919050565b61014981610136565b811461015457600080fd5b50565b60008151905061016681610140565b92915050565b60008060408385031215610183576101826100c1565b5b600061019185828601610121565b92505060206101a285828601610157565b9150509250929050565b610897806101bb6000396000f3fe60806040526004361061004a5760003560e01c80633610724e1461004f578063380d831b1461006b578063519ee19e1461008257806355a373d6146100ad5780637ff9b596146100d8575b600080fd5b6100696004803603810190610064919061055f565b610103565b005b34801561007757600080fd5b506100806102c0565b005b34801561008e57600080fd5b506100976104bb565b6040516100a4919061059b565b60405180910390f35b3480156100b957600080fd5b506100c26104c1565b6040516100cf9190610635565b60405180910390f35b3480156100e457600080fd5b506100ed6104e7565b6040516100fa919061059b565b60405180910390f35b61010f816002546104ed565b341461011a57600080fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b144adfb306040518263ffffffff1660e01b81526004016101769190610671565b602060405180830381865afa158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b791906106a1565b10156101c257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161021f9291906106ce565b6020604051808303816000875af115801561023e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610262919061072f565b61026b57600080fd5b806003600082825461027d919061078b565b925050819055507f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df0933826040516102b59291906106ce565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031857600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b144adfb306040518263ffffffff1660e01b81526004016103d29190610671565b602060405180830381865afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041391906106a1565b6040518363ffffffff1660e01b81526004016104309291906106ce565b6020604051808303816000875af115801561044f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610473919061072f565b61047c57600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16ff5b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008082148061051557508183838561050691906107bf565b9250826105139190610830565b145b61051e57600080fd5b92915050565b600080fd5b6000819050919050565b61053c81610529565b811461054757600080fd5b50565b60008135905061055981610533565b92915050565b60006020828403121561057557610574610524565b5b60006105838482850161054a565b91505092915050565b61059581610529565b82525050565b60006020820190506105b0600083018461058c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105fb6105f66105f1846105b6565b6105d6565b6105b6565b9050919050565b600061060d826105e0565b9050919050565b600061061f82610602565b9050919050565b61062f81610614565b82525050565b600060208201905061064a6000830184610626565b92915050565b600061065b826105b6565b9050919050565b61066b81610650565b82525050565b60006020820190506106866000830184610662565b92915050565b60008151905061069b81610533565b92915050565b6000602082840312156106b7576106b6610524565b5b60006106c58482850161068c565b91505092915050565b60006040820190506106e36000830185610662565b6106f0602083018461058c565b9392505050565b60008115159050919050565b61070c816106f7565b811461071757600080fd5b50565b60008151905061072981610703565b92915050565b60006020828403121561074557610744610524565b5b60006107538482850161071a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061079682610529565b91506107a183610529565b92508282019050808211156107b9576107b861075c565b5b92915050565b60006107ca82610529565b91506107d583610529565b92508282026107e381610529565b915082820484148315176107fa576107f961075c565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061083b82610529565b915061084683610529565b92508261085657610855610801565b5b82820490509291505056fea2646970667358221220138c4b099c9ad53b5dfb0b6ee30b8a15d8b48172093a836e3e76d878fad809f764736f6c63430008130033",
            arguments : [deepTokenInstanceObject.options.address , 1000]
        }).send({
            from:admin,     
            gas: 6721975,
            gasPrice: 20000000000
        }).then((instance)=>{
            console.log('sale instance' , instance.options.address)

            instance.methods.tokenPrice().call({from:admin} ,(err,price)=>{setTokenPrice(Number(price))} )
            instance.methods.tokenSold().call({from:admin} ,(err,price)=>{setTokenBough(Number(price))} )
            deepTokenInstanceObject.methods.approve( admin , 1000 ).send({from: admin}).then((recipt)=>{
                console.log('approve',recipt)
                deepTokenInstanceObject.methods.transferFrom(admin , instance.options.address , 250).send({from: admin}).then((recipt)=>{
                    console.log('transfer',recipt)
                    deepTokenInstanceObject.methods.balance_of(instance.options.address).call({from: sender}).then((val)=>{
                        console.log('balance of sale contract',val)
                        setTotalToken(Number(val))
                    })
                })

            })
            deepTokenInstanceObject.methods.balance_of(instance.options.address).call({from:admin} ,(err,price)=>{console.log(Number(price))} )
            setDeepTokenSaleContract(instance)
        })
    }

    const initContract=()=>{
        

        const tokenContract = new Contract(DeepToken.abi ,"0x79789dA11A2eb1206C81394880Def394D7F798D9" )
        // tokenSaleContract.defaultAccount = "0xF0c209A6f75d4a2F098957d2f6C7c46Dd35B46c6"
        console.log(tokenContract)
        tokenContract.deploy({data:"0x60806040526040518060400160405280600a81526020017f4465657020546f6b656e00000000000000000000000000000000000000000000815250600190816200004a9190620003d8565b506040518060400160405280600481526020017f446565700000000000000000000000000000000000000000000000000000000081525060029081620000919190620003d8565b506040518060400160405280600f81526020017f4465657020546f6b656e2076312e30000000000000000000000000000000000081525060039081620000d89190620003d8565b50348015620000e657600080fd5b50604051620011dd380380620011dd83398181016040528101906200010c9190620004f5565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000819055505062000527565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001e057607f821691505b602082108103620001f657620001f562000198565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000221565b6200026c868362000221565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002b9620002b3620002ad8462000284565b6200028e565b62000284565b9050919050565b6000819050919050565b620002d58362000298565b620002ed620002e482620002c0565b8484546200022e565b825550505050565b600090565b62000304620002f5565b62000311818484620002ca565b505050565b5b8181101562000339576200032d600082620002fa565b60018101905062000317565b5050565b601f82111562000388576200035281620001fc565b6200035d8462000211565b810160208510156200036d578190505b620003856200037c8562000211565b83018262000316565b50505b505050565b600082821c905092915050565b6000620003ad600019846008026200038d565b1980831691505092915050565b6000620003c883836200039a565b9150826002028217905092915050565b620003e3826200015e565b67ffffffffffffffff811115620003ff57620003fe62000169565b5b6200040b8254620001c7565b620004188282856200033d565b600060209050601f8311600181146200045057600084156200043b578287015190505b620004478582620003ba565b865550620004b7565b601f1984166200046086620001fc565b60005b828110156200048a5784890151825560018201915060208501945060208101905062000463565b86831015620004aa5784890151620004a6601f8916826200039a565b8355505b6001600288020188555050505b505050505050565b600080fd5b620004cf8162000284565b8114620004db57600080fd5b50565b600081519050620004ef81620004c4565b92915050565b6000602082840312156200050e576200050d620004bf565b5b60006200051e84828501620004de565b91505092915050565b610ca680620005376000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635a3b7e42116100665780635a3b7e421461013457806395d89b4114610152578063a9059cbb14610170578063b144adfb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad919061095e565b60405180910390f35b6100d060048036038101906100cb9190610a19565b61028e565b6040516100dd9190610a74565b60405180910390f35b6100ee610380565b6040516100fb9190610a9e565b60405180910390f35b61011e60048036038101906101199190610ab9565b610386565b60405161012b9190610a74565b60405180910390f35b61013c61060c565b604051610149919061095e565b60405180910390f35b61015a61069a565b604051610167919061095e565b60405180910390f35b61018a60048036038101906101859190610a19565b610728565b6040516101979190610a74565b60405180910390f35b6101ba60048036038101906101b59190610b0c565b610891565b6040516101c79190610a9e565b60405180910390f35b6101ea60048036038101906101e59190610b39565b6108a9565b6040516101f79190610a9e565b60405180910390f35b6001805461020d90610ba8565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610ba8565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e8460405161036e9190610a9e565b60405180910390a36001905092915050565b60005481565b600081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103d457600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561045d57600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ac9190610c08565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105029190610c3c565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105959190610c08565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105f99190610a9e565b60405180910390a3600190509392505050565b6003805461061990610ba8565b80601f016020809104026020016040519081016040528092919081815260200182805461064590610ba8565b80156106925780601f1061066757610100808354040283529160200191610692565b820191906000526020600020905b81548152906001019060200180831161067557829003601f168201915b505050505081565b600280546106a790610ba8565b80601f01602080910402602001604051908101604052809291908181526020018280546106d390610ba8565b80156107205780601f106106f557610100808354040283529160200191610720565b820191906000526020600020905b81548152906001019060200180831161070357829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561077657600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c59190610c08565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081b9190610c3c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087f9190610a9e565b60405180910390a36001905092915050565b60046020528060005260406000206000915090505481565b6005602052816000526040600020602052806000526040600020600091509150505481565b600081519050919050565b600082825260208201905092915050565b60005b838110156109085780820151818401526020810190506108ed565b60008484015250505050565b6000601f19601f8301169050919050565b6000610930826108ce565b61093a81856108d9565b935061094a8185602086016108ea565b61095381610914565b840191505092915050565b600060208201905081810360008301526109788184610925565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b082610985565b9050919050565b6109c0816109a5565b81146109cb57600080fd5b50565b6000813590506109dd816109b7565b92915050565b6000819050919050565b6109f6816109e3565b8114610a0157600080fd5b50565b600081359050610a13816109ed565b92915050565b60008060408385031215610a3057610a2f610980565b5b6000610a3e858286016109ce565b9250506020610a4f85828601610a04565b9150509250929050565b60008115159050919050565b610a6e81610a59565b82525050565b6000602082019050610a896000830184610a65565b92915050565b610a98816109e3565b82525050565b6000602082019050610ab36000830184610a8f565b92915050565b600080600060608486031215610ad257610ad1610980565b5b6000610ae0868287016109ce565b9350506020610af1868287016109ce565b9250506040610b0286828701610a04565b9150509250925092565b600060208284031215610b2257610b21610980565b5b6000610b30848285016109ce565b91505092915050565b60008060408385031215610b5057610b4f610980565b5b6000610b5e858286016109ce565b9250506020610b6f858286016109ce565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610bc057607f821691505b602082108103610bd357610bd2610b79565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c13826109e3565b9150610c1e836109e3565b9250828203905081811115610c3657610c35610bd9565b5b92915050565b6000610c47826109e3565b9150610c52836109e3565b9250828201905080821115610c6a57610c69610bd9565b5b9291505056fea264697066735822122072c8cbc5075e689f0b28aec7c3855609ac1774de4f65df6bd9ebafebc7ee5a4064736f6c63430008130033" 
            , arguments:[1000]})
            .send({
                from:admin,     
                gas: 6721975,
                gasPrice: 20000000000
            }).then((instance)=>{
            
            console.log("instance",instance.options.address)
            setDeepTokenContract(instance)
            initDeepSaleContract(instance)
           
        })
        
        // .methods.symbol().send({from:"0xF0c209A6f75d4a2F098957d2f6C7c46Dd35B46c6"}).then(console.log)

        
      
    }
    useEffect(()=>{
        
        
        if(sender!="0x0"){
            console.log( "sender",sender)
            initContract()
        }else{
            getAddress()
        }
        
    },[sender])
    const handleText=(e)=>{
        // console.log(e.target.value)
        setTokenNum(Number(e.target.value))
    }
    const handleBuy=(e)=>{
        console.log(e.target)
        if (DeepTokenSaleContract!=null && DeepTokenSaleContract!={} && DeepTokenContract!={}){
            DeepTokenSaleContract.methods.buyTokens(tokenNum).send({from:sender , value: tokenNum* tokenPrice , gas : 500000} , (err, recipt)=>{
                console.log('buy',Number(tokenNum),recipt , err)
                DeepTokenSaleContract.methods.tokenSold().call({from: admin}).then((val)=>{
                    console.log('total token sold' , Number(val))
                    setTokenBough(Number(val))
                })
            })
        } else{
            if(DeepTokenSaleContract==null){
                console.log('DeepTokenSaleContract is null')
            }
        }
    }
    return(
        <div className="App" style={{border:'1px solid' , borderRadius:20 , padding:30}}>
        <h1>Deep Token Sale</h1>
        <Stack>
            <h4>Introducing Deep Token (Deep)!
            <br></br>Token Price {tokenPrice} Ether</h4>
            <Stack direction={'row'}>
                <TextField sx={{ margin:'auto'}} fullWidth onChange={handleText} />
                <Button sx={{backgroundColor:'purple' , color:'white'}} onClick={(e)=>handleBuy(e)}>Buy Token</Button>
            </Stack>
                <br></br>
            <div style={{marginTop:10}}>
                <BorderBar num={tokenBought} denom={totalToken}  />
                <h4>Token Sold So far {tokenBought} / {totalToken} </h4>
            </div>
            <div>
                <h4>Dapp token was deployed from {sender}</h4>
            </div>
        </Stack>
        
    </div>
    )
}
export default Home;